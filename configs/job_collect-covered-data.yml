apiVersion: batch/v1
kind: Job
metadata:
  name: cwwed-container-covered-data
spec:
  backoffLimit: 2  # number of retries
  template:
    spec:
      volumes:
      - name: cwwed-volume-storage
        persistentVolumeClaim:
         claimName: efs
      # https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#handling-pod-and-container-failures
      restartPolicy: Never  # don't restart the container if the entire process fails
      containers:
      - name: cwwed-container-covered-data
        image: flackdl/cwwed
        command: ['python']
        args: ['manage.py', 'collect_covered_data']
        volumeMounts:
        - mountPath: "/media/bucket/cwwed"
          name: cwwed-volume-storage
        env:
          - name: DJANGO_SETTINGS_MODULE
            value: cwwed.settings
          - name: DEPLOY_STAGE
            value: prod
          - name: AWS_STORAGE_BUCKET_NAME
            value: cwwed-static-assets
          - name: CELERY_BROKER
            value: rabbitmq-service
          - name: CELERY_BACKEND
            value: rabbitmq-service
          # secrets
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: cwwed-secrets
                key: DATABASE_URL
          - name: SLACK_BOT_TOKEN
            valueFrom:
              secretKeyRef:
                name: cwwed-secrets
                key: SLACK_BOT_TOKEN
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: cwwed-secrets
                key: SECRET_KEY
          - name: CWWED_ARCHIVES_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: cwwed-secrets
                key: CWWED_ARCHIVES_ACCESS_KEY_ID
          - name: CWWED_ARCHIVES_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: cwwed-secrets
                key: CWWED_ARCHIVES_SECRET_ACCESS_KEY
